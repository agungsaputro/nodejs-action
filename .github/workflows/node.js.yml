# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI/CD
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
#    - run: npm test

  docker:
    needs: build
    runs-on: ubuntu-latest
    if: GitHub.ref == 'refs/heads/master' || GitHub.event_name == 'release'
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: agung1ds/nodejs-action:latest
   deploy:
      needs: docker
      runs-on: ubuntu-latest
      if: GitHub.ref == 'refs/heads/master' || GitHub.event_name == 'release'
      steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: Build and push Docker to Heroku
          env:
            DOCKERFILE_DIRECTORY: "."
            HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
            HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
            DOCKERFILE_NAME: "Dockerfile"
            DOCKER_OPTIONS: "--no-cache"
          run: |
            cd ${DOCKERFILE_DIRECTORY}
            echo ${HEROKU_API_KEY} | docker login \
              --username=${HEROKU_EMAIL} \
              registry.heroku.com \
              --password-stdin
            docker build \
              --file ${DOCKERFILE_NAME} \
              ${DOCKER_OPTIONS} \
              --tag registry.heroku.com/${HEROKU_APP_NAME}/web .
            heroku container:push web --app ${HEROKU_APP_NAME}
            heroku container:release web --app ${HEROKU_APP_NAME}
